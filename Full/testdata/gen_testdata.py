#!/usr/bin/env python

#
# Copyright (c) 2022 Mario Patetta, Conservatoire National des Arts et Metiers
# Copyright (c) 2017 Stephen Ibanez
# All rights reserved.
#
# This software was developed by Stanford University and the University of Cambridge Computer Laboratory 
# under National Science Foundation under Grant No. CNS-0855268,
# the University of Cambridge Computer Laboratory under EPSRC INTERNET Project EP/H040536/1 and
# by the University of Cambridge Computer Laboratory under DARPA/AFRL contract FA8750-11-C-0249 ("MRC2"), 
# as part of the DARPA MRC research programme.
#
# @NETFPGA_LICENSE_HEADER_START@
#
# Licensed to NetFPGA C.I.C. (NetFPGA) under one or more contributor
# license agreements.  See the NOTICE file distributed with this work for
# additional information regarding copyright ownership.  NetFPGA licenses this
# file to you under the NetFPGA Hardware-Software License, Version 1.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at:
#
#   http://www.netfpga-cic.org
#
# Unless required by applicable law or agreed to in writing, Work distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations under the License.
#
# @NETFPGA_LICENSE_HEADER_END@
#


from southbound_headers import *
from nf_sim_tools import *
import random
from collections import OrderedDict
import sss_sdnet_tuples

###########
# pkt generation tools
###########

pktsApplied = []
pktsExpected = []

# Pkt lists for SUME simulations
nf_applied = OrderedDict()
nf_applied[0] = []
nf_applied[1] = []
nf_applied[2] = []
nf_applied[3] = []
nf_expected = OrderedDict()
nf_expected[0] = []
nf_expected[1] = []
nf_expected[2] = []
nf_expected[3] = []

nf_port_map = {"nf0":0b00000001, "nf1":0b00000100, "nf2":0b00010000, "nf3":0b01000000, "dma0":0b00000010, "none":0}
nf_id_map = {"nf0":0, "nf1":1, "nf2":2, "nf3":3}

sss_sdnet_tuples.clear_tuple_files()

def applyPkt(pkt, ingress, time):
    pktsApplied.append(pkt)
    sss_sdnet_tuples.sume_tuple_in['pkt_len'] = len(pkt)
    sss_sdnet_tuples.sume_tuple_in['src_port'] = nf_port_map[ingress]
    sss_sdnet_tuples.sume_tuple_expect['pkt_len'] = len(pkt)
    sss_sdnet_tuples.sume_tuple_expect['src_port'] = nf_port_map[ingress]
    pkt.time = time
    nf_applied[nf_id_map[ingress]].append(pkt)

def expPkt(pkt, egress):
    pktsExpected.append(pkt)
    sss_sdnet_tuples.sume_tuple_expect['dst_port'] = nf_port_map[egress]
    sss_sdnet_tuples.write_tuples()
    if egress in ["nf0","nf1","nf2","nf3"]:
        nf_expected[nf_id_map[egress]].append(pkt)
    elif egress == 'bcast':
        nf_expected[0].append(pkt)
        nf_expected[1].append(pkt)
        nf_expected[2].append(pkt)
        nf_expected[3].append(pkt)


def write_pcap_files():
    wrpcap("src.pcap", pktsApplied)
    wrpcap("dst.pcap", pktsExpected)

    for i in nf_applied.keys():
        if (len(nf_applied[i]) > 0):
            wrpcap('nf{0}_applied.pcap'.format(i), nf_applied[i])

    for i in nf_expected.keys():
        if (len(nf_expected[i]) > 0):
            wrpcap('nf{0}_expected.pcap'.format(i), nf_expected[i])

    for i in nf_applied.keys():
        print "nf{0}_applied times: ".format(i), [p.time for p in nf_applied[i]]

#####################
# generate testdata #
#####################
SERVER_MAC = "d0:50:99:d8:4a:91"
MAC0 = "00:00:00:00:00:00"
MAC1 = "11:11:11:11:11:11"
MAC2 = "22:22:22:22:22:22"
MAC3 = "33:33:33:33:33:33"

CONTROLLER_IP = '127.0.0.1'
SBI_DEST_IP = '128.0.0.2'

CONTROLLER_ID    = 1
SWITCH_ID        = 1

sport = 55
dport1 = 72
dport2 = 2323


ip_list = ['10.41.0.151', '10.53.214.132', '10.162.64.20', '10.196.5.132', '10.170.139.22', '10.20.245.211', '10.40.183.16', '10.57.110.106', '10.236.42.197', '10.147.246.105', '10.27.17.59', '10.14.32.174', '10.26.79.211', '10.197.59.73', '10.159.193.45', '10.218.226.224', '10.236.103.106', '10.61.196.151', '10.18.88.168', '10.3.241.87', '10.174.235.127', '10.45.242.96', '10.63.80.71', '10.236.178.239', '10.121.86.181', '10.210.146.84', '10.29.216.136', '10.112.190.83', '10.237.64.160', '10.126.246.135', '10.15.14.252', '10.53.239.41', '10.45.110.58', '10.35.217.245', '10.225.20.224', '10.135.148.213', '10.125.254.242', '10.226.209.77', '10.42.34.82', '10.90.23.253', '10.128.6.234', '10.16.146.138', '10.218.80.67', '10.195.64.211', '10.47.96.193', '10.170.236.226', '10.96.244.97', '10.0.136.18', '10.46.170.162', '10.126.157.246', '10.13.70.144', '10.35.234.49', '10.37.20.149', '10.71.217.176', '10.187.239.77', '10.59.62.215', '10.162.232.90', '10.254.50.207', '10.110.45.209', '10.62.102.3', '10.92.66.208', '10.20.69.103', '10.164.81.171', '10.54.211.35', '10.128.126.65', '10.90.247.15', '10.103.107.64', '10.44.185.220', '10.103.189.43', '10.7.43.208', '10.192.204.8', '10.82.146.180', '10.169.108.200', '10.66.89.125', '10.169.44.230', '10.74.60.202', '10.42.239.220', '10.77.244.90', '10.68.180.46', '10.243.75.3', '10.174.247.118', '10.148.23.152', '10.40.207.101', '10.39.10.21', '10.130.106.23', '10.180.112.242', '10.121.201.30', '10.122.137.254', '10.250.39.75', '10.186.176.124', '10.139.43.181', '10.244.64.235', '10.87.253.188', '10.104.166.54', '10.63.8.50', '10.107.113.106', '10.58.73.64', '10.161.161.67', '10.3.168.217', '10.44.5.135', '10.212.165.237', '10.81.234.235', '10.238.99.56', '10.21.219.235', '10.136.205.107', '10.132.146.207', '10.124.62.251', '10.162.136.202', '10.204.110.204', '10.26.138.60', '10.74.80.19', '10.90.243.177', '10.187.219.80', '10.196.3.68', '10.199.67.75', '10.47.180.116', '10.205.8.14', '10.28.148.106', '10.194.207.50', '10.37.72.20', '10.102.200.127', '10.47.113.24', '10.216.250.255', '10.205.224.211', '10.9.123.244', '10.19.233.136', '10.88.213.146', '10.100.14.149', '10.193.181.15', '10.210.38.64', '10.181.36.61', '10.231.96.163', '10.225.149.7', '10.124.79.102', '10.0.166.182', '10.106.41.23', '10.157.172.196', '10.7.104.143', '10.121.235.120', '10.175.147.16', '10.161.238.27', '10.252.134.245', '10.212.241.12', '10.96.191.166', '10.177.59.175', '10.80.19.251', '10.27.102.114', '10.80.222.243', '10.158.73.31', '10.243.94.115', '10.202.199.24', '10.36.29.98', '10.167.132.35', '10.23.86.60', '10.181.164.56', '10.254.56.146', '10.129.65.33', '10.244.150.57', '10.0.200.25', '10.36.48.27', '10.29.67.123', '10.80.137.200', '10.217.80.165', '10.217.145.41', '10.24.107.69', '10.181.114.172', '10.27.232.68', '10.204.193.212', '10.205.143.154', '10.235.149.146', '10.197.215.42', '10.231.117.224', '10.50.91.28', '10.212.189.43', '10.254.66.110', '10.4.121.206', '10.194.139.79', '10.185.78.110', '10.176.24.224', '10.182.21.115', '10.103.56.107', '10.9.99.182', '10.156.209.161', '10.29.89.12', '10.203.44.82', '10.97.243.18', '10.41.4.229', '10.96.106.110', '10.246.114.30', '10.35.106.134', '10.99.160.209', '10.67.128.46', '10.165.76.59', '10.2.5.15', '10.172.30.97', '10.161.75.251', '10.44.229.67', '10.154.223.251', '10.242.127.237', '10.198.29.10', '10.227.187.194', '10.249.235.130', '10.26.34.209', '10.75.23.220', '10.28.223.95', '10.168.47.118', '10.20.192.84', '10.2.55.148', '10.157.55.95', '10.174.200.98', '10.238.87.12', '10.56.119.168', '10.201.62.188', '10.164.36.146', '10.207.56.99', '10.151.87.233', '10.232.9.33', '10.170.144.106', '10.95.183.168', '10.51.154.191', '10.243.186.28', '10.45.183.185', '10.182.220.105', '10.209.178.190', '10.3.135.177', '10.184.227.85', '10.9.137.62', '10.19.89.54', '10.91.38.13', '10.155.124.198', '10.54.115.79', '10.73.82.168', '10.114.4.195', '10.85.231.123', '10.27.122.198', '10.28.236.48', '10.186.143.200', '10.127.94.7', '10.86.108.61', '10.99.216.158', '10.149.149.45', '10.131.213.223', '10.199.239.102', '10.113.39.114', '10.65.250.46', '10.206.224.219', '10.245.174.243', '10.100.250.177', '10.52.58.77', '10.108.227.32', '10.182.156.156', '10.133.151.205', '10.197.20.65', '10.197.106.91', '10.94.99.219', '10.76.13.6', '10.60.15.31', '10.169.248.25', '10.50.177.17', '10.43.136.217', '10.153.136.86', '10.250.66.132', '10.190.231.33', '10.176.26.123', '10.95.231.245', '10.247.161.75', '10.98.144.61', '10.219.240.133', '10.95.75.22', '10.46.62.183', '10.84.15.110', '10.201.205.72', '10.209.122.209', '10.191.255.184', '10.181.56.173', '10.60.85.153', '10.222.101.159', '10.239.53.121', '10.167.172.24', '10.59.144.241', '10.81.133.130', '10.116.99.231', '10.81.69.57', '10.211.95.137', '10.164.19.61', '10.49.136.251', '10.89.89.246', '10.108.157.180', '10.238.225.226', '10.107.47.32', '10.145.191.107', '10.98.156.237', '10.195.228.104', '10.158.97.42', '10.235.46.60', '10.24.186.122', '10.13.93.249', '10.158.77.199', '10.45.142.236', '10.237.26.212', '10.61.179.26', '10.39.114.185', '10.44.170.195', '10.7.81.31', '10.46.237.16', '10.142.147.45', '10.125.175.215', '10.228.225.190', '10.11.30.25', '10.55.26.171', '10.27.68.89', '10.18.29.230', '10.3.126.191', '10.55.148.138', '10.51.140.241', '10.46.68.171', '10.35.218.163', '10.167.175.65', '10.145.128.241', '10.200.11.131', '10.120.111.66', '10.138.170.60', '10.31.28.239', '10.93.54.69', '10.3.222.182', '10.113.88.170', '10.122.89.92', '10.69.193.130', '10.120.207.239', '10.247.252.4', '10.124.47.218', '10.54.154.200', '10.161.0.17', '10.48.215.48', '10.19.129.197', '10.6.177.24', '10.28.5.23', '10.86.78.54', '10.173.156.182', '10.87.90.248', '10.20.245.237', '10.19.130.169', '10.56.65.225', '10.149.116.80', '10.43.84.63', '10.74.97.128', '10.241.229.252', '10.71.87.133', '10.200.54.98', '10.147.200.83', '10.147.160.57', '10.11.159.102', '10.131.247.249', '10.80.70.36', '10.6.67.210', '10.38.235.38', '10.134.238.127', '10.108.92.110', '10.88.144.134', '10.26.138.106', '10.225.37.223', '10.70.120.66', '10.105.182.250', '10.133.4.92', '10.0.124.201', '10.253.149.123', '10.196.50.168', '10.97.50.43', '10.230.43.172', '10.43.165.131', '10.64.104.144', '10.139.149.205', '10.164.181.169', '10.145.180.166', '10.139.165.180', '10.32.12.218', '10.207.79.45', '10.178.248.91', '10.197.16.252', '10.41.86.94', '10.204.76.177', '10.82.91.161', '10.59.136.65', '10.97.121.80', '10.175.218.151', '10.75.112.16', '10.184.240.191', '10.96.55.34', '10.136.11.234', '10.174.202.79', '10.200.132.205', '10.146.138.76', '10.204.225.248', '10.51.110.200', '10.234.52.27', '10.18.82.241', '10.119.50.128', '10.90.32.99', '10.41.170.143', '10.66.156.241', '10.124.153.129', '10.18.188.85', '10.153.98.64', '10.100.29.113', '10.23.62.146', '10.148.129.191', '10.104.240.221', '10.236.106.46', '10.228.254.115', '10.250.216.158', '10.60.188.249', '10.239.214.247', '10.154.237.56', '10.244.23.0', '10.43.207.44', '10.3.78.120', '10.47.143.221', '10.182.61.247', '10.8.254.66', '10.122.170.225', '10.9.109.68', '10.206.13.205', '10.115.210.153', '10.121.174.157', '10.138.248.189', '10.249.211.25', '10.162.223.242', '10.123.17.197', '10.43.107.114', '10.186.222.24', '10.51.245.20', '10.118.87.32', '10.93.75.216', '10.241.104.105', '10.120.187.154', '10.129.230.36', '10.63.151.213', '10.110.147.222', '10.198.176.114', '10.200.94.32', '10.223.103.235', '10.82.199.16', '10.218.47.229', '10.200.141.254', '10.195.248.198', '10.126.155.121', '10.254.1.251', '10.95.23.182', '10.198.95.50', '10.92.147.226', '10.20.131.207', '10.7.231.233', '10.254.105.2', '10.60.105.245', '10.24.241.21', '10.174.202.32', '10.182.114.77', '10.233.47.129', '10.118.124.232', '10.208.32.236', '10.238.192.160', '10.108.32.217', '10.54.196.204', '10.243.203.112', '10.140.22.85', '10.28.4.173', '10.62.162.205', '10.116.172.175', '10.209.64.177', '10.214.162.31', '10.46.39.94', '10.147.24.224', '10.240.66.185', '10.26.118.40', '10.138.8.115', '10.217.61.152', '10.205.57.108', '10.225.111.231', '10.61.119.89', '10.191.195.3', '10.140.53.139', '10.162.230.197', '10.10.177.235', '10.231.178.79', '10.191.224.52', '10.8.68.158', '10.74.183.81', '10.183.94.254', '10.221.62.125', '10.93.175.85', '10.30.115.132', '10.241.196.91', '10.194.108.65', '10.1.147.143', '10.77.114.130', '10.70.42.52', '10.29.91.251', '10.25.80.153', '10.249.197.95', '10.200.16.249', '10.111.226.133', '10.209.160.217', '10.17.198.218', '10.72.216.15', '10.112.241.53', '10.71.218.152', '10.8.67.8', '10.42.245.43', '10.25.29.160', '10.87.248.206', '10.150.36.51', '10.62.133.84', '10.137.254.21', '10.46.210.89', '10.50.40.248', '10.168.117.138', '10.184.221.98', '10.241.242.20', '10.250.77.5', '10.73.135.194', '10.240.182.204', '10.248.205.181', '10.241.185.165', '10.173.124.224', '10.103.67.98', '10.69.60.20', '10.165.77.137', '10.15.94.113', '10.147.209.220', '10.181.128.41', '10.77.250.246', '10.133.120.34', '10.7.102.187', '10.18.252.67', '10.22.131.22', '10.133.20.159', '10.59.79.180', '10.33.167.33', '10.220.244.81', '10.117.10.84', '10.38.168.41', '10.201.198.229', '10.130.22.90', '10.239.254.123', '10.75.32.227', '10.237.71.164', '10.132.144.237', '10.83.204.96', '10.183.205.253', '10.164.128.181', '10.187.153.74', '10.236.68.148', '10.190.210.196', '10.156.83.198', '10.192.159.61', '10.5.28.144', '10.59.250.146', '10.55.214.169', '10.2.41.183', '10.12.235.41', '10.96.208.172', '10.46.200.23', '10.77.47.103', '10.5.215.36', '10.101.218.176', '10.242.138.146', '10.232.209.175', '10.68.88.91', '10.133.24.50', '10.32.41.247', '10.193.33.38', '10.14.114.147', '10.243.171.130', '10.118.131.40', '10.161.96.34', '10.213.25.99', '10.190.248.20', '10.140.153.214', '10.141.10.141', '10.129.73.228', '10.235.117.245', '10.229.26.119', '10.236.252.7', '10.46.183.160', '10.121.150.31', '10.223.109.89', '10.82.254.120', '10.175.26.214', '10.254.119.129', '10.40.117.10', '10.17.134.37', '10.114.254.127', '10.134.140.144', '10.75.251.172', '10.217.151.119', '10.202.114.208', '10.42.98.89', '10.185.59.234', '10.207.189.97', '10.206.24.171', '10.255.195.97', '10.225.57.72', '10.99.75.84', '10.74.136.216', '10.37.23.202', '10.235.160.245', '10.89.207.251', '10.151.207.189', '10.207.220.8', '10.203.13.141', '10.52.206.108', '10.58.147.116', '10.246.61.49', '10.254.238.11', '10.19.10.119', '10.5.173.39', '10.244.50.71', '10.65.76.232', '10.216.39.241', '10.170.224.229', '10.226.182.241', '10.163.233.203', '10.136.78.212', '10.55.174.94', '10.74.20.84', '10.58.95.203', '10.114.80.83', '10.209.22.115', '10.97.30.124', '10.226.134.55', '10.91.28.254', '10.5.79.105', '10.106.29.74', '10.37.11.132', '10.44.231.160', '10.254.162.216', '10.147.133.23', '10.117.206.101', '10.78.24.166', '10.29.190.206', '10.180.103.185', '10.31.138.6', '10.163.45.199', '10.85.224.77', '10.145.162.231', '10.226.59.230', '10.176.234.233', '10.134.202.93', '10.58.10.37', '10.193.85.219', '10.131.142.234', '10.249.207.6', '10.33.115.76', '10.81.150.178', '10.154.10.108', '10.96.46.112', '10.220.200.191', '10.7.98.62', '10.230.244.16', '10.157.212.80', '10.206.238.96', '10.66.54.220', '10.216.177.140', '10.181.42.72', '10.43.125.227', '10.158.96.185', '10.192.69.156', '10.3.170.34', '10.27.1.121', '10.203.242.177', '10.178.116.172', '10.18.71.13', '10.26.166.25', '10.193.61.14', '10.48.150.173', '10.73.210.174', '10.163.133.49', '10.92.133.146', '10.37.220.218', '10.61.215.185', '10.106.211.19', '10.35.121.41', '10.245.110.117', '10.115.28.90', '10.194.179.71', '10.122.58.140', '10.19.245.15', '10.180.116.239', '10.197.85.110', '10.4.23.8', '10.244.179.80', '10.16.82.170', '10.104.70.153', '10.23.218.12', '10.174.126.104', '10.60.194.229', '10.219.31.145', '10.139.31.9', '10.157.103.128', '10.203.239.129', '10.216.247.18', '10.133.147.39', '10.38.222.105', '10.133.116.243', '10.135.101.212', '10.196.119.178', '10.113.34.161', '10.24.56.251', '10.73.64.137', '10.42.135.247', '10.177.141.122', '10.61.222.82', '10.134.228.62', '10.153.152.194', '10.255.82.155', '10.57.115.185', '10.106.48.80', '10.14.43.32', '10.144.149.93', '10.177.25.139', '10.114.77.6', '10.5.104.62', '10.204.169.113', '10.148.45.111', '10.117.33.229', '10.114.234.101', '10.94.31.60', '10.191.47.174', '10.80.195.143', '10.221.227.200', '10.51.120.191', '10.185.201.237', '10.32.117.155', '10.253.239.97', '10.9.210.197', '10.214.222.37', '10.12.204.73', '10.131.64.104', '10.152.119.182', '10.138.82.220', '10.126.23.142', '10.52.201.226', '10.188.203.76', '10.44.200.30', '10.244.230.202', '10.197.88.174', '10.182.191.6', '10.234.172.227', '10.173.192.27', '10.80.85.111', '10.139.8.157', '10.153.252.145', '10.228.93.250', '10.202.233.131', '10.175.165.101', '10.119.235.254', '10.21.61.137', '10.61.122.134', '10.193.96.255', '10.140.158.161', '10.55.127.177', '10.109.172.212', '10.40.241.251', '10.109.122.232', '10.211.159.44', '10.32.233.184', '10.238.203.217', '10.108.107.91', '10.58.36.56', '10.152.201.24', '10.92.217.109', '10.222.195.156', '10.152.217.230', '10.143.207.104', '10.188.170.193', '10.101.244.198', '10.56.50.210', '10.72.100.0', '10.106.157.210', '10.98.11.178', '10.82.149.46', '10.162.208.110', '10.246.64.111', '10.17.139.135', '10.101.212.5', '10.18.1.23', '10.71.154.235', '10.7.57.39', '10.1.5.38', '10.163.18.212', '10.211.181.245', '10.3.216.8', '10.190.171.106', '10.101.225.222', '10.19.47.97', '10.45.216.75', '10.70.71.116', '10.112.84.73', '10.67.111.128', '10.124.183.113']

port_list = [3335, 65029, 478, 58731, 12627, 37726, 2266, 14518, 50005, 27193, 11040, 42456, 21386, 9892, 50282, 31042, 56944, 6133, 5107, 27569, 48693, 27743, 55731, 43131, 43852, 43193, 12427, 3982, 19996, 9988, 50549, 28694, 32075, 49414, 51630, 27303, 31996, 2385, 31294, 5822, 35678, 39089, 37115, 4754, 4541, 23634, 18288, 52587, 34779, 55334, 46117, 47466, 18379, 21068, 30361, 31438, 6259, 39826, 32687, 24422, 34049, 35784, 23194, 54464, 6287, 55999, 45014, 3568, 47728, 41140, 27997, 24596, 50128, 11696, 62088, 8271, 36171, 36829, 47364, 48350, 46535, 29479, 22729, 22939, 2873, 60905, 27518, 62419, 38893, 42300, 36736, 42350, 15393, 60447, 35995, 14590, 56206, 53882, 35135, 63672, 19588, 19042, 44217, 55687, 46925, 47678, 41775, 15075, 50577, 12392, 24216, 39090, 22757, 30450, 8115, 1876, 29389, 45598, 57870, 18783, 60919, 24022, 43535, 57821, 27937, 52322, 47927, 36035, 38856, 10092, 56643, 32966, 55582, 49454, 23575, 54031, 15560, 57313, 14940, 52242, 55251, 8575, 43028, 58495, 61779, 65160, 36321, 44893, 49909, 33587, 50501, 41231, 54867, 41322, 3349, 2370, 59215, 3673, 11854, 47335, 47927, 54898, 41577, 21743, 61543, 50440, 49031, 12924, 9087, 41954, 34839, 32977, 61215, 56406, 38367, 8855, 58160, 63920, 38613, 32276, 39088, 1883, 43870, 35518, 65418, 21790, 55203, 24524, 39175, 6709, 15785, 21353, 51915, 8440, 27018, 44855, 21234, 59264, 1749, 21223, 64907, 550, 52747, 5962, 58973, 42556, 51632, 2184, 23331, 40817, 35919, 36830, 968, 64551, 65389, 37568, 36206, 39148, 57255, 15935, 45956, 44861, 36637, 45710, 45590, 48674, 16388, 17951, 5472, 2706, 61550, 36167, 18026, 54559, 4081, 63718, 51087, 34329, 61053, 10173, 21765, 688, 36795, 12084, 36632, 20540, 1045, 33549, 13404, 50607, 29252, 60915, 6824, 22917, 46202, 29389, 38889, 18277, 25371, 25857, 40158, 17677, 17354, 48266, 27534, 9539, 55152, 14016, 11531, 59480, 31006, 26912, 30294, 59826, 34382, 2868, 2704, 65364, 7824, 39850, 12250, 40665, 18098, 14313, 41904, 60716, 19998, 19136, 50454, 48704, 16271, 25770, 53161, 14901, 45619, 3229, 61370, 34151, 55465, 57714, 32587, 43284, 9600, 31728, 616, 55029, 16601, 54641, 5305, 20561, 10797, 29571, 32032, 19855, 16654, 17082, 51458, 17876, 19978, 33529, 50921, 27859, 38321, 30639, 44625, 64480, 19127, 35826, 14960, 31610, 36496, 9880, 5862, 30827, 25009, 39908, 12095, 24021, 6554, 26078, 61329, 34258, 57333, 48712, 59166, 15121, 6326, 55732, 52222, 20024, 19884, 56516, 41131, 55390, 58016, 50502, 4641, 6789, 22290, 65514, 14956, 975, 36190, 7562, 12809, 51794, 44889, 45512, 11919, 63008, 49541, 26650, 51181, 22643, 39801, 1430, 44545, 39265, 5798, 3848, 5642, 54407, 31403, 21188, 42899, 40027, 39071, 39799, 20817, 42601, 55510, 19775, 55371, 22853, 55261, 64013, 5382, 26531, 32326, 24401, 14515, 27262, 12535, 40367, 1020, 19752, 53565, 61118, 43854, 13306, 48936, 26085, 64174, 36587, 47418, 4858, 26796, 37416, 42807, 34027, 65343, 13191, 24012, 47466, 37041, 57124, 27071, 32026, 53852, 59747, 24219, 60022, 30841, 8450, 1119, 24185, 65281, 26615, 4027, 63924, 7867, 30361, 18350, 6286, 15752, 26380, 63187, 55528, 45621, 56374, 58275, 42300, 1907, 51384, 40435, 17665, 23323, 28195, 27648, 24508, 59060, 16467, 61903, 37345, 13368, 49627, 24862, 1165, 23892, 27060, 51704, 20093, 11037, 21959, 50655, 21090, 52470, 63582, 24850, 38165, 61424, 50894, 31731, 28048, 36032, 54641, 59442, 21786, 17619, 16992, 25870, 32735, 14903, 62462, 2505, 4725, 54001, 41761, 18489, 10223, 39259, 50683, 614, 54013, 26844, 17881, 18136, 47565, 47876, 15592, 22310, 10345, 14860, 8830, 10439, 35082, 54096, 48337, 14584, 49521, 33570, 45702, 32976, 26869, 34555, 33281, 46456, 60674, 5954, 48802, 31869, 17689, 4215, 29443, 18028, 40615, 45879, 56325, 4648, 61796, 14992, 4206, 13117, 35927, 15599, 2331, 52378, 56053, 17422, 64549, 54135, 7926, 7624, 26779, 1335, 55585, 3459, 36355, 60507, 45181, 2254, 34167, 10540, 29168, 26920, 34701, 5094, 14010, 62251, 35842, 16948, 31628, 23091, 60270, 18502, 60643, 6059, 42610, 29942, 34931, 56289, 58488, 49989, 48502, 29868, 59470, 63718, 955, 59917, 9422, 19948, 33996, 28375, 25859, 7478, 35593, 22245, 37689, 52392, 52028, 23611, 44851, 54511, 28422, 7457, 30843, 5125, 21504, 40686, 22668, 53131, 50185, 59453, 10657, 52393, 59166, 15763, 4652, 60348, 35107, 12406, 53488, 9375, 18180, 29823, 35786, 56162, 9888, 54784, 44674, 16834, 4863, 28912, 54561, 52906, 45648, 26995, 40554, 5842, 53657, 2377, 19744, 41228, 55477, 11522, 59653, 9660, 3589, 54484, 56703, 56071, 10226, 52734, 20160, 19047, 47643, 8828, 35701, 8690, 37115, 36961, 12249, 41347, 35403, 7463, 44756, 4176, 65142, 48526, 57800, 40619, 36620, 198, 10747, 52285, 35074, 10554, 43457, 23190, 30654, 30694, 3851, 51761, 43550, 15937, 8931, 17160, 22484, 59683, 1906, 53084, 27705, 8391, 21966, 48262, 57264, 50814, 38097, 15076, 51646, 6746, 35868, 8885, 59631, 38129, 32463, 466, 33610, 10285, 50804, 7814, 30322, 21965, 22752, 6847, 51835, 19484, 42061, 20916, 16545, 41270, 53438, 61477, 15297, 50342, 41945, 33443, 50192, 58693, 17248, 21029, 30533, 14585, 25438, 23845, 12856, 62825, 2617, 8416, 10717, 52985, 10322, 57498, 39436, 12707, 26586, 54857, 4405, 63242, 44447, 9539, 12827, 22231, 23170, 13687, 61995, 46523, 40598, 32450, 10493, 15423, 19, 38710, 24385, 14586, 53754, 10697, 38445, 14635, 11566, 44719, 64739, 52220, 64856, 41141, 4496, 8489, 34423, 57085, 50945, 58218, 7960, 26159, 43730, 33011, 50518, 38335, 31197, 35204, 52850, 40337, 30636, 17856, 1858, 17882, 15650, 56067, 2603, 49702, 7343]

size_list = [684,454,535,789,820,787,684,337,282,981,733,227,98,101,384,144,726,101
,197,39,477,721,565,25,799,419,10,238,553,672,256,203,561,268,781,910
,582,907,825,480,698,644,886,982,444,26,407,299,480,269,151,159,547,888
,426,229,506,675,677,985,422,386,970,956,765,824,160,108,441,676,338,113
,266,421,470,142,979,989,580,236,691,3,487,449,646,39,411,580,184,937
,596,678,501,653,837,8,274,198,980,47,645,382,204,454,905,797,871,600
,610,374,33,71,200,242,452,758,67,223,20,102,884,686,85,330,442,67
,854,664,199,91,626,939,742,362,135,713,90,519,489,445,834,416,646,502
,625,805,696,452,845,146,851,573,362,27,535,805,109,187,374,477,539,200
,141,900,180,521,173,178,139,120,895,809,505,227,699,412,949,215,923,51
,534,917,649,392,708,495,122,407,616,590,650,380,487,422,409,711,677,536
,215,104,809,724,949,233,916,769,47,668,72,40,302,195,670,211,40,786
,498,679,933,772,891,512,354,142,184,288,906,778,60,280,987,89,953,302
,448,599,203,192,94,438,844,836,57,693,896,904,462,271,245,738,331,51
,149,599,461,928,870,259,1,530,659,416,817,825,217,150,167,317,475,25
,49,52,339,309,192,16,871,92,151,367,726,307,197,492,896,892,148,711
,36,118,574,113,962,87,673,980,52,308,587,926,262,714,373,303,125,205
,999,142,491,254,561,480,634,208,185,618,818,424,658,257,799,641,729,994
,256,91,457,594,416,414,168,175,835,925,657,792,682,331,684,94,311,150
,199,808,529,517,333,206,148,690,948,397,842,676,943,344,155,62,447,980
,702,796,924,783,797,900,73,506,659,155,148,20,998,705,452,124,36,134
,325,642,369,169,980,374,615,659,369,682,858,623,189,16,594,981,871,570
,102,595,14,755,130,949,29,699,134,885,894,999,901,793,609,376,480,285
,560,788,116,502,560,818,236,217,474,606,788,193,40,574,80,437,601,754
,713,995,431,126,651,952,741,590,715,634,469,521,523,780,52,262,23,662
,972,456,219,289,851,389,204,488,122,953,687,575,482,943,917,57,879,887
,419,578,210,314,240,411,465,594,964,103,107,669,615,905,269,135,430,425
,9,258,218,284,688,779,567,468,285,277,127,789,975,381,539,977,272,94
,624,147,718,914,72,538,469,12,363,422,266,487,898,91,391,460,580,143
,333,220,448,177,398,213,828,428,844,370,261,89,898,229,986,509,966,382
,307,209,330,703,757,769,228,509,175,446,334,655,337,45,266,426,126,560
,77,564,638,636,535,535,501,67,213,55,314,46,968,41,995,629,80,429
,594,677,974,268,568,180,188,290,26,711,404,843,523,559,345,325,298,356
,370,225,941,839,39,331,668,541,924,162,974,653,387,937,900,430,475,85
,178,874,543,225,691,633,271,730,436,94,56,712,86,867,473,60,480,297
,203,920,466,130,867,166,118,687,63,168,924,179,202,871,548,496,265,556
,846,272,228,625,28,942,142,74,129,560,395,380,392,482,602,62,880,244
,828,481,137,729,265,552,387,739,153,694,51,465,626,644,32,814,388,900
,678,506,455,151,627,232,706,559,3,227,395,88,382,366,139,246,704,455
,201,12,625,981,896,764,902,429,87,244,175,128,878,255,198,487,666,433
,730,26,998,578,658,598,355,321,838,282,353,343,657,938,722,500,503,83
,81,66,270,243,225,276,960,425,305,548,525,407,382,438,694,905,849,956
,381,149,744,943,473,909,11,427,391,635,870,832,308,625,237,409,357,113
,317,866,112,41,520,943,144,595,517,352,360,796,974,580,733,595,542,544
,836,508,626,609,604,906,731,549,238,479,838,500,888,849,246,310,786,731
,472,278,392,117,172,903,784,69,767,690,726,452,18,399,216,246,75,645
,489,842,20,878,13,545,694,893,133,101,718,378,868,863,69,238,741,441
,767,567,164,988,654,539,649,392,531,374,329,18,505,853,254,329,637,904
,500,706,620,115,908,375,733,842,453,213,31,160,761,348,910,20,227,782
,436,527,519,235,732,610,912,709,94,203,41,898,622,645,8,553,757,451
,906,238,511,597,807,888,8,638,555,549,623,428,913,639,930,366,137,336
,256,38,947,481,349,138,220,742,779,66,466,587,789,752,550,42,716,852
,185,50,921,139,240,151,112,502,424,970,746,835,664,612,541,944,550,316
,525,803,148,379,29,7,442,163,678,896,422,324,880,50,438,852,625,942
,855,330,484,291,447,884,361,449,655,544,724,965,26,786,208,831,34,552
,975,364,325,902,55,567,620,79,134,562]

pkt_cnt = 0


##########################
### Setup the SwitchID ###
##########################
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=0) / SouthboundSetID(NewID=31)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=0, ACK=1) / SouthboundSetID(NewID=31)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")


###########################
### Test Routing Tables ###
###########################

# Populate the SBI Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundSBIRouting(key_h=0, key_l=15, port=NF1, address=0)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundSBIRouting(key_h=0, key_l=15, port=NF1, address=0)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundSBIRouting(key_h=1, key_l=15, port=NF3, address=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundSBIRouting(key_h=1, key_l=15, port=NF3, address=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

# Check the SBI Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundSBIRouting(key_h=0, key_l=15, port=0, address=0, check=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundSBIRouting(key_h=0, key_l=15, port=NF1, address=0, check=1, check_match=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundSBIRouting(key_h=1, key_l=15, port=0, address=0, check=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundSBIRouting(key_h=1, key_l=15, port=NF3, address=0, check=1, check_match=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

# Test the SBI Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=15)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=15)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf1")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=15, ACK=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf1",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=15, ACK=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")


# Populate the dstIP Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstIPRouting(key="10.0.2.1", port=NF0, address=0)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstIPRouting(key="10.0.2.1", port=NF0, address=0)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstIPRouting(key="10.0.2.2", port=NF1+NF2, address=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstIPRouting(key="10.0.2.2", port=NF1+NF2, address=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

# Check the dstIP Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstIPRouting(key="10.0.2.1", port=0, address=0, check=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstIPRouting(key="10.0.2.1", port=NF0, address=0, check=1, check_match=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstIPRouting(key="10.0.2.2", port=0, address=0, check=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstIPRouting(key="10.0.2.2", port=NF1+NF2, address=0, check=1, check_match=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

# Populate the dstPort Routing Table to blacklist port 2322
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstPortRouting(key=2322, port=0, address=0)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstPortRouting(key=2322, port=0, address=0)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

# Check the dstPort Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstPortRouting(key=2322, port=0, address=0, check=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstPortRouting(key=2322, port=0, address=0, check=1, check_match=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

# Check blacklisting works
pkt = Ether(dst=MAC1, src=MAC2) / IP(dst="10.0.2.1", src='10.45.216.75') / TCP(sport=344, dport=2322, flags=0)  # Should go to port NF0 according to the dstIP table...
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
expPkt(pkt, "none")                                                                                             # ...but is dropped by the dstPort table

# Check reset on the dstIP Routing Table
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstIPRouting(reset=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstIPRouting(reset=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundDstIPRouting(key="10.0.2.1", port=0, address=0, check=1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundDstIPRouting(key="10.0.2.1", port=0, address=0, check=1, check_match=0)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3") 



##########################
### Test Split & Merge ###
##########################

# Setup the S&M port LUT
# port 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundSetSnmPort(port=dport1)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",pkt_cnt)
pkt_cnt += 1
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundSetSnmPort(port=dport1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")


# TCP traffic
# Traffic on port 1
HEADER_SIZE = 54
for i in range(len(ip_list)):
    if (i%5 == 0):
        pkt = Ether(dst=MAC1, src=MAC2) / IP(dst=ip_list[i], src='10.45.216.75') / TCP(sport=port_list[i], dport=dport1, flags='S')
    else:
        pkt = Ether(dst=MAC1, src=MAC2) / IP(dst=ip_list[i], src='10.45.216.75') / TCP(sport=port_list[i], dport=dport1, flags=0)
    pkt = pad_pkt(pkt, size_list[i]+HEADER_SIZE)
    applyPkt(pkt,"nf3",pkt_cnt)
    pkt_cnt += 1
    expPkt(pkt, "none")


#####################
### Check Metrics ###
#####################

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundMetric(metricID=DST_IP_CARD)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",len(ip_list)+1)
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundMetric(metricID=DST_IP_CARD, result1 = 257312)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundMetric(metricID=SRC_PORTS_CARD)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",len(ip_list)+2)
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundMetric(metricID=SRC_PORTS_CARD, result1 = 291336, result2=1)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")

pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31) / SouthboundMetric(metricID=COUNTERS)
pkt = pad_pkt(pkt, 300)
applyPkt(pkt,"nf3",len(ip_list)+3)
pkt = Ether(dst=MAC3, src=SERVER_MAC) / IP(dst=SBI_DEST_IP , src=CONTROLLER_IP) / Southbound(ControllerID=CONTROLLER_ID , SwitchID=31, ACK=1) / SouthboundMetric( metricID=COUNTERS, result1=160, result2=800, result3=473, result4=20580 )  # std = result4<<2 (we use 20 bits instead of 22)
pkt = pad_pkt(pkt, 300)
expPkt(pkt, "nf3")


write_pcap_files()

